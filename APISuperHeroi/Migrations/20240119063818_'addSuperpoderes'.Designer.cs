// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APISuperHeroi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240119063818_'addSuperpoderes'")]
    partial class addSuperpoderes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APISuperHeroi.Model.Heroi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("Altura")
                        .HasColumnType("double");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeHeroi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double?>("Peso")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Herois");
                });

            modelBuilder.Entity("APISuperHeroi.Model.HeroisSuperPoderes", b =>
                {
                    b.Property<int>("HeroiId")
                        .HasColumnType("int");

                    b.Property<int>("SuperPoderesId")
                        .HasColumnType("int");

                    b.HasKey("HeroiId", "SuperPoderesId");

                    b.HasIndex("SuperPoderesId");

                    b.ToTable("HeroisSuperPoderes");
                });

            modelBuilder.Entity("APISuperHeroi.Model.SuperPoderes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("SuperPoder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SuperPoderes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Habilidade de voar.",
                            SuperPoder = "Voo"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Força muito além dos limites humanos.",
                            SuperPoder = "Força sobre-humana"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Capacidade de se mover em velocidades extremas.",
                            SuperPoder = "Hiper velocidade"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Capacidade de ler mentes e se comunicar mentalmente.",
                            SuperPoder = "Telepatia"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Capacidade de se tornar invisível aos olhos.",
                            SuperPoder = "Invisibilidade"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Controle sobre o fluxo do tempo.",
                            SuperPoder = "Manipulação do tempo"
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Domínio sobre os elementos naturais: água, fogo, terra, ar.",
                            SuperPoder = "Controle elemental"
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "Habilidade de mover objetos com a mente.",
                            SuperPoder = "Telecinese"
                        },
                        new
                        {
                            Id = 9,
                            Descricao = "Capacidade de alterar a aparência física.",
                            SuperPoder = "Transformação de forma"
                        },
                        new
                        {
                            Id = 10,
                            Descricao = "Criação de uma barreira de proteção invisível.",
                            SuperPoder = "Geração de campo de força"
                        },
                        new
                        {
                            Id = 11,
                            Descricao = "Capacidade de se curar rapidamente de ferimentos.",
                            SuperPoder = "Cura acelerada"
                        },
                        new
                        {
                            Id = 12,
                            Descricao = "Deslocamento entre diferentes dimensões.",
                            SuperPoder = "Viagem interdimensional"
                        });
                });

            modelBuilder.Entity("APISuperHeroi.Model.HeroisSuperPoderes", b =>
                {
                    b.HasOne("APISuperHeroi.Model.Heroi", "Heroi")
                        .WithMany("HeroisSuperPoderes")
                        .HasForeignKey("HeroiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APISuperHeroi.Model.SuperPoderes", "SuperPoder")
                        .WithMany()
                        .HasForeignKey("SuperPoderesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heroi");

                    b.Navigation("SuperPoder");
                });

            modelBuilder.Entity("APISuperHeroi.Model.Heroi", b =>
                {
                    b.Navigation("HeroisSuperPoderes");
                });
#pragma warning restore 612, 618
        }
    }
}
